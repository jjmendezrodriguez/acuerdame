/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

:root {
  --background: #101114;
  --primary-color: #1c1d20;
  --secondary-color: #4a4d57;
  --accent-color: #00ffc4;
  --text-color: #f9f9f9;
}

* {
  margin: 0;
  padding: 0;
}

html {
  font-family: "segoe ui", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-size: 16pt;
  color: var(--text-color);
}

body {
  min-height: 100vh;
  padding: 10px;
  background-color: var(--background);
  display: flex;
  flex-direction: column;
  align-items: center;
  touch-action: manipulation; /* Para que no haya delay en los clicks */
}

h1 {
  margin: 100px 0 20px 0;
  font-size: 3rem;
  font-weight: 800;
  text-transform: uppercase;
  text-align: center;
  color: var(--accent-color);
}

.wrapper {
  width: 700px;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

#todo-input {
  box-sizing: border-box;
  padding: 12px 20px;
  width: 100%;
  background: none;
  border: 2px solid var(--secondary-color);
  border-radius: 1000px;
  font: inherit; /* Hereda la fuente del body */
  color: var(--text-color);
  caret-color: var(--accent-color); /* Color del cursor que parpadea */
}

#todo-input:focus {
  outline: none; /* Quita el borde azul que aparece al hacer click */
}

form {
  position: relative;
}

#add-btn {
  position: absolute;
  top: 0;
  right: 0;
  background-color: var(--accent-color);
  height: 100%;
  padding: 0 30px;
  border: none;
  border-radius: 1000px;
  font: inherit;
  font-weight: 600;
  color: var(--background);
  cursor: pointer;
}

.todo {
  margin-bottom: 10px;
  padding: 0 16px;
  background-color: var(--primary-color);
  border-radius: 15px;
  display: flex;
  align-items: center;
}

.todo .todo-text {
  padding: 15px;
  padding-right: 0; /* Para que no haya espacio entre el texto y el borde */
  flex-grow: 1; /* Para que ocupe todo el espacio posible asi el boton se queda a la derecha */
  transition: 200ms ease; /* Hace que el cambio de color sea mas suave */
}

.delete-btn {
  padding: 3px;
  background: none;
  border: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}

.delete-btn svg {
  transition: 200ms ease; /* Hace que el cambio de color sea mas suave */
}

.delete-btn:hover svg {
  /* svg significa que se aplica a todos los svg dentro de .delete-btn:hover */
  fill: #ff0033;
}

.custom-checkbox {
  border: 2px solid var(--accent-color);
  border-radius: 50%;
  min-height: 20px;
  min-width: 20px; /* Para que sea un cuadrado */
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0; /* Para que no se haga mas peque√±o */
  transition: 200ms ease; /* Hace que el cambio de color sea mas suave */
  cursor: pointer;
}

input[type="checkbox"]:checked ~ .custom-checkbox {
  /* la syntax de input[type="checkbox"]:checked es para seleccionar el checkbox que esta marcado y el ~ es para seleccionar el siguiente elemento */
  background-color: var(--accent-color);
}

input[type="checkbox"]:checked ~ .custom-checkbox svg {
  /* Cuando el checkbox esta marcado */
  fill: var(--primary-color); /* Cambia el color del svg (simbolo) */
}

input[type="checkbox"]:checked ~ .todo-text {
  /* Cuando el checkbox esta marcado */
  text-decoration: line-through; /* Tachado */
  color: var(--secondary-color);
}

input[type="checkbox"] {
  display: none; /* Oculta el checkbox de default */
}

@media (max-width: 500px) {
  html {
    font-size: 12pt;
  }
  #add-btn {
    /* Para que el boton de agregar no se salga de la pantalla */
    position: unset; /* Quita la posicion absoluta */
    width: 100%;
    margin-top: 10px;
    padding: 15px;
    height: auto; /* Para que el boton se ajuste al texto */
  }
  h1 {
    margin-top: 50px;
    font-size: 12vw;
  }
}
